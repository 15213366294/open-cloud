<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.opencloud.base.provider.mapper.BaseAuthorityMapper">
    <resultMap id="BaseResultMap" type="com.opencloud.base.client.model.entity.BaseAuthority">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="authority_id" jdbcType="BIGINT" property="authorityId"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="menu_id" jdbcType="BIGINT" property="menuId"/>
        <result column="api_id" jdbcType="BIGINT" property="apiId"/>
        <result column="action_id" jdbcType="BIGINT" property="actionId"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="AccessAuthority" type="com.opencloud.base.client.model.AuthorityAccess">
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="service_id" jdbcType="VARCHAR" property="serviceId"/>
        <result column="is_auth" jdbcType="INTEGER" property="isAuth"/>
        <result column="prefix" jdbcType="VARCHAR" property="prefix"/>
    </resultMap>

    <resultMap id="Authority" type="com.opencloud.common.security.Authority">
        <result column="authority_id" jdbcType="BIGINT" property="authorityId"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime"/>
        <result column="owner" jdbcType="VARCHAR" property="owner"/>
    </resultMap>

    <resultMap id="AuthorityMenu" type="com.opencloud.base.client.model.AuthorityMenu"
               extends="com.opencloud.base.provider.mapper.BaseMenuMapper.BaseResultMap">
        <result column="authority_id" jdbcType="BIGINT" property="authorityId"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <collection property="actionList" column="{menuId=menu_id,status=status}" select="selectAuthorityAction"/>
    </resultMap>

    <resultMap id="AuthorityAction" type="com.opencloud.base.client.model.AuthorityAction"
               extends="com.opencloud.base.provider.mapper.BaseActionMapper.BaseResultMap">
        <result column="authority_id" jdbcType="BIGINT" property="authorityId"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="service_id" jdbcType="VARCHAR" property="serviceId"/>
    </resultMap>

    <resultMap id="AuthorityApi" type="com.opencloud.base.client.model.AuthorityApi"
               extends="com.opencloud.base.provider.mapper.BaseApiMapper.BaseResultMap">
        <result column="authority_id" jdbcType="BIGINT" property="authorityId"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="prefix" jdbcType="VARCHAR" property="prefix"/>
    </resultMap>

    <select id="selectAuthorityMenu" resultMap="AuthorityMenu">
        SELECT
        a.authority_id,
        a.authority,
        m.*
        FROM
        base_authority AS a
       LEFT JOIN base_menu AS m ON a.menu_id = m.menu_id
        <where>
            <if test="status!=null">
                AND m.status = #{status}
            </if>
        </where>
    </select>

    <select id="selectAuthorityAction" resultMap="AuthorityAction">
        SELECT
        a.authority_id,
        a.authority,
        o.*
        FROM
        base_authority AS a
       LEFT JOIN base_action AS o ON a.action_id = o.action_id
        <if test="roleId!=null">
           LEFT JOIN base_authority_role AS ra ON ra.authority_id = a.authority_id
        </if>
        <if test="userId!=null">
           LEFT JOIN base_authority_user AS ua ON ua.authority_id = a.authority_id
        </if>
        <where>
            <if test="status!=null">
                AND o.status = #{status}
            </if>
            <if test="menuId!=null">
                AND o.menu_id = #{menuId}
            </if>
            <if test="roleId!=null">
                AND ra.role_id = #{roleId}
            </if>
            <if test="userId!=null">
                AND ua.user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="selectAuthorityApi" resultMap="AuthorityApi">
        SELECT
        a.authority_id,
        a.authority,
        api.*,
        route.path as prefix
        FROM
        base_authority AS a
       LEFT JOIN base_api AS api ON a.api_id = api.api_id
       LEFT JOIN gateway_route AS route ON route.service_id = api.service_id
        <where>
            <if test="status!=null">
                AND api.status = #{status}
            </if>
            <if test="serviceId!=null and serviceId!=''">
                AND api.service_id = #{serviceId}
            </if>
        </where>
       order by api.create_time desc
    </select>

    <select id="selectAuthorityAll"
            resultMap="Authority">
        select
        authority_id,
        authority,
        'user' as owner
        from base_authority
        <where>
            <if test="status!=null">
                AND status = #{status}
            </if>
            <if test="type!=null and type!='' and type == '1'.toString()">
                and api_id is null
            </if>
            <if test="type!=null and type!='' and type == '2'.toString()">
                and api_id is not null
            </if>
        </where>
    </select>

    <select id="selectAllAuthorityRole" resultMap="AccessAuthority">
        SELECT
            concat('ROLE_', r.role_code) AS authority,
            '1' AS is_auth,
            m.path,
            m.service_id,
            ar.authority_id,
            route.service_id AS prefix
        FROM
            base_authority AS a
               LEFT JOIN base_authority_role AS ar ON ar.authority_id = a.authority_id
               LEFT JOIN base_role AS r ON ar.role_id = r.role_id
               LEFT JOIN base_menu AS m ON a.menu_id = m.menu_id
               LEFT JOIN gateway_route AS route ON m.service_id = route.service_id
        WHERE
            a.menu_id != ''
            AND m.path != ''
            AND r.`status` = 1
            AND m.`status` = 1
            AND m.scheme = '/'
        UNION ALL
        SELECT
            concat('ROLE_', r.role_code) AS authority,
            '1' AS is_auth,
            api.path,
            api.service_id,
            a2.authority_id,
            route.path AS prefix
        FROM
            base_authority AS a
               LEFT JOIN base_authority_role AS ar ON ar.authority_id = a.authority_id
               LEFT JOIN base_role AS r ON ar.role_id = r.role_id
               LEFT JOIN base_action AS act ON a.action_id = act.action_id
               LEFT JOIN base_authority_action AS aa ON aa.action_id = act.action_id
               LEFT JOIN base_authority AS a2 ON aa.authority_id = a2.authority_id
               LEFT JOIN base_api AS api ON a2.api_id = api.api_id
               LEFT JOIN gateway_route AS route ON route.service_id = api.service_id
        WHERE
            a.action_id != ''
            AND r.`status` = 1
            AND api.path != ''
            AND api.`status` = 1
    </select>


    <select id="selectAllAuthorityUser" resultMap="AccessAuthority">
        SELECT
            concat('USER_', u.user_id) AS authority,
            '1' AS is_auth,
            m.path,
            m.service_id,
            au.authority_id,
            route.service_id AS prefix
        FROM
            base_authority AS a
               LEFT JOIN base_authority_user AS au ON au.authority_id = a.authority_id
               LEFT JOIN base_user AS u ON au.user_id = u.user_id
               LEFT JOIN base_menu AS m ON a.menu_id = m.menu_id
               LEFT JOIN gateway_route AS route ON m.service_id = route.service_id
        WHERE
            a.menu_id != ''
            AND m.path != ''
            AND u.`status` = 1
            AND m.`status` = 1
            AND m.scheme = '/'
        UNION ALL
        SELECT
            concat('USER_', u.user_id) AS authority,
            '1' AS is_auth,
            api.path,
            api.service_id,
            a2.authority_id,
            route.path AS prefix
        FROM
            base_authority AS a
               LEFT JOIN base_authority_user AS au ON au.authority_id = a.authority_id
               LEFT JOIN base_user AS u ON au.user_id = u.user_id
               LEFT JOIN base_action AS act ON a.action_id = act.action_id
               LEFT JOIN base_authority_action AS aa ON aa.action_id = act.action_id
               LEFT JOIN base_authority AS a2 ON aa.authority_id = a2.authority_id
               LEFT JOIN base_api AS api ON a2.api_id = api.api_id
               LEFT JOIN gateway_route AS route ON route.service_id = api.service_id
        WHERE
            a.action_id != ''
            AND u.`status` = 1
            AND api.path != ''
            AND api.`status` = 1
    </select>


    <select id="selectAllAuthorityApp" resultMap="AccessAuthority">
        SELECT
            a.authority_id,
            concat('APP_', app.app_id) AS authority,
            api.path,
            api.is_auth,
            api.service_id,
            route.path AS prefix
        FROM
            base_authority AS a
               LEFT JOIN base_authority_app AS aa ON aa.authority_id = a.authority_id
               LEFT JOIN base_app AS app ON aa.app_id = app.app_id
               LEFT JOIN base_api AS api ON api.api_id = a.api_id
               LEFT JOIN gateway_route AS route ON api.service_id = route.service_id
        WHERE
            a.api_id != ''
            AND app.`status` = 1
            AND api.`status` = 1
    </select>

</mapper>
